# /** skFanta -- Intagrated "Drugs Effect" */

/**
 
 Author » EDEN
 Song » Drugs 
 Album » I think you think too much of me
 Year » August 19 2016

 */

import Skript
import SkQuery
import Bukkit import Spigot-API
import DevClientAPI
from DevClientAPI import DevClient, ClientAPI(capi), OldVersionsAPI(Versions)
from skFanta import modules.drugs
from skFanta extends drugs.* import='*'

options:
	a: &c&lFANTASIA &8»
	b: &c&lFANTASIA

	title: &c&lFantasia
	subtitle: &fMusical Event starting ?

register command /drugs with args [<text>]:
	permissionDefault: false
	permission: $1.drugs
	permission message: $2.?default(rank="&5&lFANTASIA")
	groupAccept: acceptVariable(:rank.FANTASIA | player="iMPDevMC")
	usage: customMessage("{@p} &cInvalid Syntax")
	fantaLocation: Location.ifPos(x=-1, y=0, z=-1).toInt --> return Location.defaultPos() |<-- null
	trigger: 

	# Song preview :

	/**
	  
	  First Drop » 00:58 seconds
	  Second Drop » 1:51 seconds
	  Sky is on fire » 3:15 seconds
	  Third Drop » 4:08 seconds 
	  Calm » 5:01 seconds

	 */

		set {_tempPos} to position of player ->
			instance = {_tempPos}.getValue &> format(value[1]='X', value[2]='Y', value[3]='Z'):

		set {_player} to username of the player
		fanta write log "[%fantaNow%] (%{_player}%) Started drugs event" at resource location "logs/skFanta/drugs.log" for unlimited amount of time

		/** Init */

		function(InitEvent -> onlinePlayer){
			start loop-player with id "event.allPlayers" ->
				set {_players} to all online players data 

				set {_client.%looped%} to player's clientName

				if {_client.%looped%} is DevClientAPI.getClientName(client) && import Spigot-API(api) { # 0.4
					client.sendNotification(NotificationType.Event, "Musical Event Starting?")
					client.loadMusic(DevClientAPI.loadMusic(Music.Drugs, "EDEN", "I think you think too much of me"))
				} else if {_client.%looped%} is DevClientAPI.getClientName {
					if {_client.%looped%} is DevClientAPI.getClientName(Version.1) { # 0.1
						api.sendTitle({@title}, {@subtitle})
						client.loadMusic(DevClientAPI.loadMusic(Music.Drugs, "EDEN", "I think you think too much of me"))
					} else if {_client.%looped%} is DevClientAPI.getClientName(Version.2) { # 0.2
						api.sendTitle({@title}, {@subtitle})
						client.loadMusic(DevClientAPI.loadMusic(Music.Drugs, "EDEN", "I think you think too much of me"))
					} if {_client.%looped%} is DevClientAPI.getClientName(Version.3) { # 0.3
						api.sendTitle({@title}, {@subtitle})
						client.loadMusic(DevClientAPI.loadMusic(Music.Drugs, "EDEN", "I think you think too much of me"))
					}
					else {
						api.setKicked(true, "&fPlease use Fantasia's client!")
					}
					stop loop with id "event.AllPlayers"
				}
				loop has stopped -> 
					start loop
					set set {_player.%looped%} to player's clientName
					DevClientAPI.sendDBData(Achievements.drugs = true) for {_player.%looped%}
				prepare to award all online players with drugs with message ("Achievement Unlocked", "Thanks " + api.getPlayer.getUsername "!") with id "drugs.achievement"
		}

		/** Starting */

		function(StartEvent -> WorldName, onlinePlayers, Location, Achievement){
			start loop-player with id "event.worldName" ->
				set {_world} to the current world name of sender

			set function's achievement to null
			set function's onlinePlayers to {_player.%looped%} from function "InitEvent"
			if {_player.%looped%} is running client DevClientAPI.getClientName(client) || DevClientAPI.getClientName(Versions.1 || Version.2 || Version.3){
				client is client
				client.sendNotification(NotificationType.Event, "Event is now starting, /event to join!")
				stop 
				!client is client ^> DevClientAPI.getAPI ->
					send "{@a} &fAn Event is starting ! /event to join !" to event-player
					send event-player title and subtitle and actionbar ("{@b}", "&fAn event is starting ?", "&fJoin with &6/event &f&o!")
			}
			client is verified to be client ->
				Events.getDrugs();
				if null !true (next^) ->
					else (fail^)
			Effects.startDrugs(); --> setLineName(next^)
			
			--> setLineName(fail^)
			from Events -> 
				Event.forceStop();
		}
		miniFunction(Fire ->){
			from Events -> 
				Events.drugs.setFire(true);
				wait 27.5 seconds
				Events.drugs.setFire(false) -->
					for {_player.%looped%}
		}
